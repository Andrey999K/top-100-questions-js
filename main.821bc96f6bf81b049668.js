(()=>{"use strict";const t=JSON.parse('[{"id":1,"text":"Чем отличается оператор \\"==\\" от \\"===\\"?","answers":[{"id":1,"text":"\\"==\\" сравнивает значения с приведением типов, в то время как \\"===\\" сравнивает значения без приведения типов"},{"id":2,"text":"\\"==\\" сравнивает значения без приведения типов, в то время как \\"===\\" сравнивает значения с приведением типов"},{"id":3,"text":"\\"==\\" сравнивает значения, а \\"===\\" сравнивает и если значения равны, присваивает значение"},{"id":4,"text":"В JavaScript нет оператора \\"===\\""}],"rightAnswer":2},{"id":2,"text":"Какие основные типы данных есть в JavaScript?","answers":[{"id":1,"text":"Number, BigInt, String, Boolean, Null, Undefined, Object, Symbol"},{"id":2,"text":"Number, String, Boolean, Object, Function, Null"},{"id":3,"text":"Int, Float, String, Array, Function, Object"},{"id":4,"text":"Number, BigInt, String, Boolean, Null, Undefined, Object"}],"rightAnswer":1},{"id":3,"text":"В чём отличие var, let и const?","answers":[{"id":1,"text":"let и const отличаются тем, что мы не можем переназначить переменную объявленную с помощью const, а var это устаревший синтаксис let"},{"id":2,"text":"var это устаревший синтаксис let, а const отличается от них тем, что переменную объявленную с помощью const нельзя переназначить"},{"id":3,"text":"let и const имеют блочную область видимости и отличаются тем, что мы не можем переназначить переменную объявленную с помощью const. А var отличается от let тем, что имеет функциональную область видимости"},{"id":4,"text":"var это устаревший синтаксис let. Они имеют функциональную область видимости, а const отличается от них тем, что имеет блочную область видимости"}],"rightAnswer":3},{"id":4,"text":"В чём отличие стрелочной функции от обычной?","answers":[{"id":1,"text":"У обычной функции в отличии от стелочной есть собственный this и мы можем обратиться к ней до её объявления."},{"id":2,"text":"У стрелочной функции в отличии от обычной есть собственный this и мы можем обратиться к ней до её объявления."},{"id":3,"text":"У обычной функции в отличии от стрелочной есть собственный this и мы не можем обратиться к ней до её объявления."},{"id":4,"text":"У стрелочной функции в отличии от обычной есть собственный this и мы не можем обратиться к ней до её объявления. "}],"rightAnswer":1},{"id":5,"text":"Что такое event.preventDefault()?","answers":[{"id":1,"text":"Предотвращает дальнейшее распространение текущего события, т.е. предотвращает всплытие."},{"id":2,"text":"Возвращает ссылку на объект, который был инициатором события."},{"id":3,"text":"Возвращает ссылку на элемент, в котором в данный момент обрабатывается событие."},{"id":4,"text":"Отменяет поведение браузера по умолчанию, которое происходит при обработке события."}],"rightAnswer":4}]');let e=!1,n=!1,s=0,i=0,r=!1;const a=(t,e)=>{const n=document.createElement(t);return n.className=e,n},c=a("div","switch-theme");c.innerHTML='<div class="switch-theme__circle"></div>',document.body.append(c),window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches&&(r=!0,c.classList.add("dark"),document.body.classList.add("dark")),c.addEventListener("click",(()=>{r=!r,c.classList.toggle("dark"),document.body.classList.toggle("dark")}));const d=a("div","content");document.body.append(d);const o=()=>{i=0,s=0,e=!0,n=!1,m()},l=()=>{if(e&&document.querySelector(".start-button")&&document.querySelector(".start-button").removeEventListener("click",o),!n&&document.querySelector(".button-start-again")){document.querySelector(".button-start-again").removeEventListener("click",o)}document.querySelectorAll(".question-answers__item").forEach((t=>t.removeEventListener("click",u)))},u=e=>{const r=e.currentTarget,a=Number(r.getAttribute("data-answer")),c=Number(r.getAttribute("data-question"));t.find((t=>t.id===c)).rightAnswer===a?(i++,r.classList.add("success")):r.classList.add("error"),l(),setTimeout((()=>{++s>=t.length&&(s=0,n=!0),m()}),1e3)};function m(){if(l(),document.body.className=r?"dark":"",d.innerHTML=`\n    <svg class="logo">\n      <use xlink:href="sprite.svg#logo" />\n    </svg>\n    <div class="container">\n      ${e?n?`\n              <div>\n                <h2>Ваш счёт: ${i}/${t.length}</h2>\n                <button class="button-start-again">Начать заново</button>\n              </div>\n            `:`\n              <div class="question">\n                <h2>${t[s].text}</h2>\n                <ol class="question-answers">\n                  ${t[s].answers.map((t=>`\n                    <li class="question-answers__item" data-answer="${t.id}" data-question="${s+1}">\n                      <span>${t.text}</span>\n                    </li>\n                  `)).join("")}\n                </ol>\n              </div>`:'<button class="start-button">Начать тест</button>'}\n    </div>`,n){document.querySelector(".button-start-again").addEventListener("click",o)}if(e){document.querySelectorAll(".question-answers__item").forEach((t=>t.addEventListener("click",u)))}if(!e){document.querySelector(".start-button").addEventListener("click",o)}}m()})();
//# sourceMappingURL=main.821bc96f6bf81b049668.js.map