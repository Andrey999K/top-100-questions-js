{"version":3,"file":"main.a1b6818f75be0220c803.js","mappings":"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","sources":["webpack:///./utils/shuffle.js","webpack:///./index.js"],"sourcesContent":["export default function shuffle(arr) {\r\n  for (let i = arr.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    const temp = arr[i];\r\n    arr[i] = arr[j];\r\n    arr[j] = temp;\r\n  }\r\n  return arr;\r\n}\r\n","import \"./main.scss\";\r\nimport questions from \"./data/questions.json\";\r\nimport shuffle from \"./utils/shuffle\";\r\n\r\nconst randomizeQuestions = () => {\r\n  return shuffle(questions).map(question => ({ ...question, answers: shuffle(question.answers) }));\r\n};\r\n\r\nlet randomQuestions = randomizeQuestions();\r\n\r\nlet testStarted = false;\r\nlet testEnded = false;\r\nlet currentQuestionIndex = 0;\r\nlet rightAnswers = 0;\r\nlet darkTheme = false;\r\nlet score = 0;\r\nlet time = `Время: 00:00.0`;\r\nlet timer = null;\r\n\r\nconst createElement = (tag, className) => {\r\n  const elem = document.createElement(tag);\r\n  elem.className = className;\r\n  return elem;\r\n};\r\n\r\nconst switchTheme = createElement(\"div\", \"switch-theme\");\r\nswitchTheme.innerHTML = `<div class=\"switch-theme__circle\"></div>`;\r\ndocument.body.append(switchTheme);\r\nif (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\r\n  darkTheme = true;\r\n  switchTheme.classList.add(\"dark\");\r\n  document.body.classList.add(\"dark\");\r\n}\r\n\r\nconst timerElem = createElement(\"div\", \"timer\");\r\ndocument.body.append(timerElem);\r\n\r\nconst renderTimer = () => {\r\n  timerElem.innerHTML = time;\r\n};\r\n\r\nswitchTheme.addEventListener(\"click\", () => {\r\n  darkTheme = !darkTheme;\r\n  switchTheme.classList.toggle(\"dark\");\r\n  document.body.classList.toggle(\"dark\");\r\n});\r\n\r\nconst content = createElement(\"div\", \"content\");\r\ndocument.body.append(content);\r\n\r\nconst formatTime = (seconds) => {\r\n  seconds %= 60;\r\n  return seconds < 10 ? `0${seconds}` : String(seconds);\r\n};\r\n\r\nconst startTimer = () => {\r\n  let second = 0;\r\n  timer = setInterval(() => {\r\n    second += 1;\r\n    time = `Время: ${formatTime(Math.floor(second / 600))}:${formatTime(Math.floor(second / 10))}.${second % 10}`;\r\n    renderTimer();\r\n  }, 100)\r\n};\r\n\r\nconst startTest = () => {\r\n  randomQuestions = randomizeQuestions();\r\n  rightAnswers = 0;\r\n  score = 0;\r\n  currentQuestionIndex = 0;\r\n  testStarted = true;\r\n  clearInterval(timer);\r\n  startTimer();\r\n  testEnded = false;\r\n  renderContent();\r\n};\r\n\r\nconst deleteHandlers = () => {\r\n  if (testStarted && document.querySelector(\".start-button\")) {\r\n    document.querySelector(\".start-button\").removeEventListener(\"click\", startTest);\r\n  }\r\n  if (!testEnded && document.querySelector(\".button-start-again\")) {\r\n    const buttonStartAgain = document.querySelector(\".button-start-again\");\r\n    buttonStartAgain.removeEventListener(\"click\", startTest);\r\n  }\r\n  const answers = document.querySelectorAll(\".question-answers__item\");\r\n  answers.forEach(answer => answer.removeEventListener(\"click\", selectAnswer));\r\n}\r\n\r\nconst selectAnswer = (e) => {\r\n  const elem = e.currentTarget;\r\n  const answerId = Number(elem.getAttribute(\"data-answer\"));\r\n  const questionId = Number(elem.getAttribute(\"data-question\"));\r\n  let currentQuestion = randomQuestions.find(question => question.id === questionId);\r\n  if (currentQuestion.rightAnswer === answerId) {\r\n    rightAnswers++;\r\n    score += currentQuestion.points;\r\n    elem.classList.add(\"success\");\r\n  }\r\n  else elem.classList.add(\"error\");\r\n  deleteHandlers();\r\n  if (++currentQuestionIndex >= randomQuestions.length) clearInterval(timer);\r\n  setTimeout(() => {\r\n    if (currentQuestionIndex >= randomQuestions.length) {\r\n      currentQuestionIndex = 0;\r\n      testEnded = true;\r\n    }\r\n    renderContent();\r\n  }, 1000);\r\n};\r\n\r\nfunction renderContent() {\r\n  deleteHandlers();\r\n  if (darkTheme) document.body.className = \"dark\";\r\n  else document.body.className = \"\";\r\n  content.innerHTML = `\r\n    <svg class=\"logo\">\r\n      <use xlink:href=\"sprite.svg#logo\" />\r\n    </svg>\r\n    <div class=\"container\">\r\n      ${\r\n        !testStarted\r\n          ? `<button class=\"start-button\">Начать тест</button>`\r\n          : (!testEnded\r\n            ? `\r\n              <div class=\"result\">\r\n                <p class=\"result__right-answers\">${rightAnswers + \"/\" + randomQuestions.length}</p>\r\n                <p class=\"result__score\">Очки: ${score}</p>\r\n              </div>\r\n              <div class=\"question\">\r\n                <h2 class=\"question__text\">${randomQuestions[currentQuestionIndex].text}</h2>\r\n                ${randomQuestions[currentQuestionIndex].img\r\n                  ? `<div class=\"question__wrapper-image\">\r\n                      <img class=\"question__image\" src=\"${randomQuestions[currentQuestionIndex].img}\" alt=\"\">\r\n                    </div>`\r\n                  : \"\"\r\n                }\r\n                <ol class=\"question-answers\">\r\n                  ${randomQuestions[currentQuestionIndex].answers.map((answer) => `\r\n                    <li class=\"question-answers__item\" data-answer=\"${answer.id}\" data-question=\"${randomQuestions[currentQuestionIndex].id}\">\r\n                      <span>${answer.text}</span>\r\n                    </li>\r\n                  `).join(\"\")}\r\n                </ol>\r\n              </div>`\r\n            : `\r\n              <div class=\"result\">\r\n                <h2>Ваш счёт: ${rightAnswers}/${randomQuestions.length}</h2>\r\n                <p>Очки: ${score}</p>\r\n                <button class=\"button-start-again\">Начать заново</button>\r\n              </div>\r\n            `)\r\n      }\r\n    </div>`;\r\n  if (testEnded) {\r\n    const buttonStartAgain = document.querySelector(\".button-start-again\");\r\n    buttonStartAgain.addEventListener(\"click\", startTest);\r\n  }\r\n  if (testStarted) {\r\n    const answers = document.querySelectorAll(\".question-answers__item\");\r\n    answers.forEach(answer => answer.addEventListener(\"click\", selectAnswer));\r\n  }\r\n  if (!testStarted) {\r\n    const startButton = document.querySelector(\".start-button\");\r\n    startButton.addEventListener(\"click\", startTest);\r\n  }\r\n}\r\n\r\nrenderContent();\r\n"],"names":["shuffle","arr","i","length","j","Math","floor","random","temp","randomizeQuestions","map","question","answers","randomQuestions","testStarted","testEnded","currentQuestionIndex","rightAnswers","darkTheme","score","time","timer","createElement","tag","className","elem","document","switchTheme","innerHTML","body","append","window","matchMedia","matches","classList","add","timerElem","addEventListener","toggle","content","formatTime","seconds","String","startTimer","second","setInterval","startTest","clearInterval","renderContent","deleteHandlers","querySelector","removeEventListener","querySelectorAll","forEach","answer","selectAnswer","e","currentTarget","answerId","Number","getAttribute","questionId","currentQuestion","find","id","rightAnswer","points","setTimeout","text","img","join"],"sourceRoot":""}